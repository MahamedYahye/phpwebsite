substitutions:
  httpkey: "3f3ea036-6e3e-4731-a475-08e008108474" # api key
  httpprotocol: "http" # api http or https
  httpaddress: "145.220.75.82" # api domain or ip
  httpport: "15000" # api port
  httppath: "/create" # api path

esphome:
  name: soli-sensor
  on_boot:
    - script.execute: send_data

esp32:
  board: esp32dev
  framework:
    type: arduino

# Enable logging
logger:

# Enable Home Assistant API
api:

ota:

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Soli-Sensor Fallback Hotspot"
    password: "uj9njShzAoM8"

captive_portal:

http_request:
  useragent: esphome/device
  timeout: 10s

sensor:
  - platform: dht # get room temperature and humidity from dht11
    model: DHT11
    pin: 14
    temperature:
      name: "Room Temperature"
      id: temperature
      accuracy_decimals: 1
    humidity:
      name: "Room Humidity"
      id: humidity
      accuracy_decimals: 1
  - platform: adc
    pin: 33
    id: light_illuminance
    attenuation: 11db
    name: "Light illuminance"
    filters:
      - median:
          window_size: 7
          send_every: 4
          send_first_at: 1
      - lambda: |-
          return (x / 10000.0) * 2000000.0;
    accuracy_decimals: 1
    unit_of_measurement: "lx"
    device_class: illuminance
  - platform: adc
    pin: 32
    name: "Soil Moisture"
    id: soil_moisture
    unit_of_measurement: "%"
    attenuation: 11db
    filters:
      - median:
          window_size: 7
          send_every: 4
          send_first_at: 1
      # linear calibration to convert adc voltage to moisture
      - calibrate_linear:
          - 3.3 -> 0.00
          - 0 -> 100.00
      # make sure value is from 0~100%
      - lambda: |
          if (x < 0) return 0;
          else if (x > 100) return 100;
          else return (x);
    accuracy_decimals: 1
    device_class: humidity
    on_value:
      then:
        - if:
            condition: ## check whether moisture is bigger than configured value
              lambda: 'return x>=60.0;'
            then:
              - switch.turn_off: led_red
              - switch.turn_on: led_green
            else:
              - switch.turn_on: led_red
              - switch.turn_off: led_green

switch:
  - platform: gpio
    pin: 25
    id: led_red
    internal: true
  - platform: gpio
    pin: 26
    id: led_green
    internal: true

script:
  # script to send data to api server
  - id: send_data
    then:
      - while:
          condition:
            lambda: 'return 1;'
          then:
            - http_request.post:
                url: "http://${httpaddress}:${httpport}${httppath}"
                verify_ssl: false
                headers:
                  Content-Type: application/json
                json: |-
                  root["key"] = "${httpkey}";
                  root["temperature"] = id(temperature).state;
                  root["humidity"] = id(humidity).state;
                  root["moisture"] = id(soil_moisture).state;
                  root["light"] = id(light_illuminance).state;
            - delay: 1min # send data every 1 minute
